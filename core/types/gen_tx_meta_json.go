// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"
	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
)

// MarshalJSON marshals as JSON.
func (t TransactionMeta) MarshalJSON() ([]byte, error) {
	type TransactionMeta struct {
		L1RollupTxId      *hexutil.Uint64   `json:"l1RollupTxId" gencodec:"required"`
		L1MessageSender   *common.Address   `json:"l1MessageSender" gencodec:"required"`
		SignatureHashType SignatureHashType `json:"signatureHashType" gencodec:"required"`
		QueueOrigin       *big.Int          `json:"queueOrigin" gencodec:"required"`
	}
	var enc TransactionMeta
	enc.L1RollupTxId = t.L1RollupTxId
	enc.L1MessageSender = t.L1MessageSender
	enc.SignatureHashType = t.SignatureHashType
	enc.QueueOrigin = t.QueueOrigin
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (t *TransactionMeta) UnmarshalJSON(input []byte) error {
	type TransactionMeta struct {
		L1RollupTxId      *hexutil.Uint64    `json:"l1RollupTxId" gencodec:"required"`
		L1MessageSender   *common.Address    `json:"l1MessageSender" gencodec:"required"`
		SignatureHashType *SignatureHashType `json:"signatureHashType" gencodec:"required"`
		QueueOrigin       *big.Int           `json:"queueOrigin" gencodec:"required"`
	}
	var dec TransactionMeta
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.L1RollupTxId == nil {
		return errors.New("missing required field 'l1RollupTxId' for TransactionMeta")
	}
	t.L1RollupTxId = dec.L1RollupTxId
	if dec.L1MessageSender == nil {
		return errors.New("missing required field 'l1MessageSender' for TransactionMeta")
	}
	t.L1MessageSender = dec.L1MessageSender
	if dec.SignatureHashType == nil {
		return errors.New("missing required field 'signatureHashType' for TransactionMeta")
	}
	t.SignatureHashType = *dec.SignatureHashType
	if dec.QueueOrigin == nil {
		return errors.New("missing required field 'queueOrigin' for TransactionMeta")
	}
	t.QueueOrigin = dec.QueueOrigin
	return nil
}
